VAR_EXPECTED=expected a Prolog variable but found '%s'
NUMBER_NAN=value %s is not a number
NUMBER_INFINITY=value %s maps to infinity
NUMBER_TOO_LARGE_CONVERTING=number %s is too large for integer handling. It is converted to double
NUMBER_NOT_PARSED=number can't be read
FOUND_BUT_NEED=found %s but we need %s here
FAILED_PREDICATE=did not see that coming (thought we were not using predicates)
TOKEN_BAD=syntax does not allow %s here, delete this
TOKEN_MISSING=%s is missing here
EXPECTED_TEXT=Found %s instead of %s
PREFIX_OPERATOR=a prefix operator
TERM0=a basic term like a number, variable, name, or list
TERM50=an (other) operator
TERM100=an (other) operator
TERM200=an (other) operator
TERM400=an (other) operator
TERM400B=an (other) operator
TERM500=an (other) operator
TERM500B=an (other) operator
TERM700=an (other) operator
TERM900=an (other) operator
TERM1000=expression(s)
TERM1050=expression(s)
TERM1100=a disjunct of expressions
TERM1105=a disjunct of expressions
TERM1150=a disjunct of expressions
TERM1200=a clause
TERMS=term(s)
DISJUNCT_OF_TERMS=disjunct of terms
EXPRESSION=an expression
LIST=a list
EXPRESSIONS=expression(s)
CLAUSE=a prolog clause
CLAUSES=prolog clauses
DIRECTIVE=:-
PREFIXOP=an expression in prefix notation
CANNOT_BE_USED='%s' cannot be used here
EXPECTED_VAR=expected a SWI prolog variable but found '%s'
HEAD_CANT_BE_VAR=the head of a Prolog rule cannot be a variable: %s
HEAD_MUST_BE_CLAUSE=the head of a Prolog rule cannot be %s but should be a Prolog clause
CANNOT_REDEFINE_BUILT_IN=cannot redefine the Prolog built-in predicate %s
PROTECTED_PREDICATE=some predicates, like %s, are protected and are not allowed in the head of a Prolog clause: %s
EXPECTED_COMPOUND=can't use basic term '%s' here
CLAUSE_NOT_AS_GOAL=can't use a clause '%s' as a goal
DIRECTIVE_NOT_AS_GOAL=can't use a directive '%s' as a goal
PREDICATE_NOT_SUPPORTED=the use of predicate '%s' is not supported
NOT_SUPPORTED_DIRECTIVE=the use of directive '%s' is not supported